from my_tools.tools import timer, is_prime

"""
Задача 27
Эйлер опубликовал свою замечательную квадратичную формулу:
n^2+n+41
Оказалось, что согласно данной формуле можно получить 40 простых чисел, последовательно подставляя 
значения 0≤n≤39. Однако, при n=40, 402+40+41=40(40+1)+41 делится на 41 без остатка, и, очевидно, при 
n=41,412+41+41 делится на 41 без остатка.
При помощи компьютеров была найдена невероятная формула n2−79n+1601, согласно которой можно получить 
80 простых чисел для последовательных значений n от 0 до 79. Произведение коэффициентов −79 и 1601 равно −126479.
Рассмотрим квадратичную формулу вида:
n^2+an+b, где |a|<1000 и |b|≤1000
где |n| является модулем (абсолютным значением) n.
К примеру, |11|=11 и |−4|=4
Найдите произведение коэффициентов a и b квадратичного выражения, согласно которому можно получить 
максимальное количество простых чисел для последовательных значений n, начиная со значения n=0.
"""


@timer
def problem_27(a_max=999, b_max=1000):
    res = [0, []]
    for b in range(b_max + 1):
        flag = True
        if is_prime(abs(b)):
            for a in range(-a_max, a_max + 1):
                if flag:
                    n = 0
                    while True:
                        n += 1
                        x = n ** 2 + a * n + b
                        if is_prime(abs(x)):
                            continue
                        else:
                            if res[0] < n:
                                res = [n, [a, b]]
                            break
    return res[1][0] * res[1][1]


if __name__ == "__main__":
    print(problem_27())
