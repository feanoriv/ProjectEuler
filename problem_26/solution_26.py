from my_tools.tools import timer

"""
Задача 26
Единичная дробь имеет 1 в числителе. Десятичные представления единичных дробей 
со знаменателями от 2 до 10 даны ниже:
1/2	=	0.5
1/3	=	0.(3)
1/4	=	0.25
1/5	=	0.2
1/6	=	0.1(6)
1/7	=	0.(142857)
1/8	=	0.125
1/9	=	0.(1)
1/10	=	0.1
Где 0.1(6) значит 0.166666..., и имеет повторяющуюся последовательность из одной цифры. 
Заметим, что 1/7 имеет повторяющуюся последовательность из 6 цифр.
Найдите значение d < 1000, для которого 1/d в десятичном виде содержит самую 
длинную повторяющуюся последовательность цифр.
"""


# При делении в столбик число умножается на 10, если оно меньше знаменателя.
# Эти числа добавляются в список, если число уже в списке, последовательность будет гарантировано повторяться
# Длина такого отрезка списка есть повторяющаяся последовательность.
@timer
def problem_26(n=1000):
    seq_res, number = 0, 0
    for i in range(1, n + 1):
        x = 1
        res_i = []
        while True:
            if x < i and x != 0:
                x *= 10
                if x not in res_i:
                    res_i.append(x)
                else:
                    if len(res_i[res_i.index(x):]) > seq_res:
                        seq_res = len(res_i[res_i.index(x):])
                        number = i
                    break
                x %= i
            elif x == 0:
                break
            else:
                break
    return number  # , seq_res


if __name__ == "__main__":
    print(problem_26())
