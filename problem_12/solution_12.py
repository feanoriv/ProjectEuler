from my_tools.tools import timer

"""
Задача 12
Последовательность треугольных чисел образуется путем сложения натуральных чисел. 
К примеру, 7-е треугольное число равно 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
Первые десять треугольных чисел:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
Перечислим делители первых семи треугольных чисел:
 1: 1
 3: 1, 3
 6: 1, 2, 3, 6
10: 1, 2, 5, 10
15: 1, 3, 5, 15
21: 1, 3, 7, 21
28: 1, 2, 4, 7, 14, 28
Как мы видим, 28 - первое треугольное число, у которого более пяти делителей.
Каково первое треугольное число, у которого более пятисот делителей?
"""


def how_divisors_have(n):
    res = 1
    if n == 0:
        return 0
    if n == 1:
        return 1
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            res += 2
    if n / n ** 0.5 % 1 == 0:
        res -= 1
    return res + 1


@timer
def problem_12(n=500):
    number = 1
    i = 1
    while True:
        i += 1
        number += i
        divs = how_divisors_have(number)
        if divs >= n:
            return i, number, divs


if __name__ == "__main__":
    print(problem_12())
